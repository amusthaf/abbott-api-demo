name: Abbott SOAP API Demo Pipeline

on:
  workflow_dispatch:
    inputs:
      soap_wsdl_url:
        description: 'SOAP WSDL URL'
        required: false
        default: 'http://www.dneonline.com/calculator.asmx?wsdl'
      api_path:
        description: 'API Path in APIM'
        required: false
        default: 'calculator'
      create_servicenow_cr:
        description: 'Create ServiceNow Change Request'
        required: false
        default: 'true'
        type: boolean
  pull_request:
    branches: [ main ]  # Only trigger for PRs to main branch
    types: [opened, synchronize, reopened, closed]

permissions:
  issues: write
  pull-requests: write
  contents: read

env:
  SOAP_WSDL_URL: ${{ github.event.inputs.soap_wsdl_url || 'http://www.dneonline.com/calculator.asmx?wsdl' }}
  API_PATH: ${{ github.event.inputs.api_path || 'calculator' }}
  APIM_SERVICE_NAME: 'abbott-apim-demo-04'
  RESOURCE_GROUP: 'abbott-demo-rg'

jobs:
  security-scan:
    name: Security & Validation
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch' || github.event.action != 'closed'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Validate SOAP WSDL
        run: |
          echo "Validating SOAP WSDL URL: ${{ env.SOAP_WSDL_URL }}"
          curl -f -s "${{ env.SOAP_WSDL_URL }}" > /dev/null && echo "WSDL is accessible" || exit 1
          echo "WSDL validation completed"

  create-servicenow-cr:
    name: Create ServiceNow Change Request
    runs-on: ubuntu-latest
    needs: security-scan
    if: (github.event.action == 'opened' || github.event.action == 'reopened' || github.event_name == 'workflow_dispatch') && (github.event.inputs.create_servicenow_cr != 'false')
    outputs:
      cr-number: ${{ steps.create-cr.outputs.cr-number }}
      cr-sys-id: ${{ steps.create-cr.outputs.cr-sys-id }}
    
    steps:
      - name: Lookup Assignment Group sys_id
        id: lookup-group
        run: |
          echo "Looking up Change Management group..."
          GROUP_RESPONSE=$(curl -s \
            -u "${{ secrets.SERVICENOW_USERNAME }}:${{ secrets.SERVICENOW_PASSWORD }}" \
            "${{ secrets.SERVICENOW_INSTANCE }}/api/now/table/sys_user_group?sysparm_query=name=Change%20Management&sysparm_fields=sys_id,name")
          
          echo "Group lookup response: $GROUP_RESPONSE"
          GROUP_SYS_ID=$(echo "$GROUP_RESPONSE" | jq -r '.result[0].sys_id // empty')
          
          if [ -z "$GROUP_SYS_ID" ] || [ "$GROUP_SYS_ID" = "null" ]; then
            echo "Change Management group not found, will use group name instead"
            echo "group_sys_id=" >> $GITHUB_OUTPUT
          else
            echo "Found group sys_id: $GROUP_SYS_ID"
            echo "group_sys_id=$GROUP_SYS_ID" >> $GITHUB_OUTPUT
          fi

      - name: Lookup Assigned To sys_id
        id: lookup-user
        run: |
          echo "Looking up Change Manager user..."
          USER_RESPONSE=$(curl -s \
            -u "${{ secrets.SERVICENOW_USERNAME }}:${{ secrets.SERVICENOW_PASSWORD }}" \
            "${{ secrets.SERVICENOW_INSTANCE }}/api/now/table/sys_user?sysparm_query=name=Change%20Manager^ORuser_name=Change%20Manager&sysparm_fields=sys_id,name,user_name")
          
          echo "User lookup response: $USER_RESPONSE"
          USER_SYS_ID=$(echo "$USER_RESPONSE" | jq -r '.result[0].sys_id // empty')
          
          if [ -z "$USER_SYS_ID" ] || [ "$USER_SYS_ID" = "null" ]; then
            echo "Change Manager user not found, will use username instead"
            echo "user_sys_id=" >> $GITHUB_OUTPUT
          else
            echo "Found user sys_id: $USER_SYS_ID"
            echo "user_sys_id=$USER_SYS_ID" >> $GITHUB_OUTPUT
          fi

      - name: Create ServiceNow Change Request
        id: create-cr
        run: |
          echo "Creating ServiceNow Change Request for SOAP API deployment..."
          
          # Use sys_id if available, otherwise use name
          if [ -n "${{ steps.lookup-group.outputs.group_sys_id }}" ]; then
            ASSIGNMENT_GROUP="${{ steps.lookup-group.outputs.group_sys_id }}"
          else
            ASSIGNMENT_GROUP="Change Management"
          fi
          
          if [ -n "${{ steps.lookup-user.outputs.user_sys_id }}" ]; then
            ASSIGNED_TO="${{ steps.lookup-user.outputs.user_sys_id }}"
          else
            ASSIGNED_TO="Change Manager"
          fi
          
          # Handle manual dispatch vs PR context
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            PR_NUMBER="Manual-${{ github.run_number }}"
            DESCRIPTION="Manual SOAP API deployment request\\nWSDL URL: ${{ env.SOAP_WSDL_URL }}\\nAPI Path: ${{ env.API_PATH }}\\nTriggered by: ${{ github.actor }}\\nWorkflow: ${{ github.workflow }}\\nRun ID: ${{ github.run_id }}"
          else
            PR_NUMBER="${{ github.event.number }}"
            DESCRIPTION="Automated SOAP API deployment request\\nRepository: ${{ github.repository }}\\nPR: ${{ github.event.pull_request.title }}\\nBranch: ${{ github.event.pull_request.head.ref }}\\nAuthor: ${{ github.event.pull_request.user.login }}\\nCommit: ${{ github.event.pull_request.head.sha }}\\nPR URL: ${{ github.event.pull_request.html_url }}\\nWSDL URL: ${{ env.SOAP_WSDL_URL }}"
          fi
          
          echo "Using assignment_group: $ASSIGNMENT_GROUP"
          echo "Using assigned_to: $ASSIGNED_TO"
          
          RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" -X POST \
            -u "${{ secrets.SERVICENOW_USERNAME }}:${{ secrets.SERVICENOW_PASSWORD }}" \
            -H "Content-Type: application/json" \
            -d "{
              \"short_description\": \"Deploy Abbott SOAP API - $PR_NUMBER\",
              \"description\": \"$DESCRIPTION\",
              \"category\": \"Software\",
              \"priority\": \"3\",
              \"risk\": \"3\",
              \"state\": \"1\",
              \"type\": \"normal\",
              \"requested_by\": \"${{ secrets.SERVICENOW_USERNAME }}\",
              \"assignment_group\": \"$ASSIGNMENT_GROUP\",
              \"assigned_to\": \"$ASSIGNED_TO\",
              \"approval\": \"requested\",
              \"u_commit_sha\": \"${{ github.sha }}\",
              \"u_pr_number\": \"$PR_NUMBER\"
            }" \
            "${{ secrets.SERVICENOW_INSTANCE }}/api/now/table/change_request")
          
          # Extract HTTP status and body
          HTTP_STATUS=$(echo "$RESPONSE" | grep -o "HTTPSTATUS:[0-9]*" | cut -d: -f2)
          RESPONSE_BODY=$(echo "$RESPONSE" | sed 's/HTTPSTATUS:[0-9]*$//')
          
          echo "ServiceNow HTTP Status: $HTTP_STATUS"
          
          if [ "$HTTP_STATUS" != "201" ]; then
            echo "ServiceNow API call failed with HTTP status: $HTTP_STATUS"
            echo "Full response: $RESPONSE_BODY"
            exit 1
          fi
          
          CR_NUMBER=$(echo "$RESPONSE_BODY" | jq -r '.result.number')
          CR_SYS_ID=$(echo "$RESPONSE_BODY" | jq -r '.result.sys_id')
          
          echo "cr-number=$CR_NUMBER" >> $GITHUB_OUTPUT
          echo "cr-sys-id=$CR_SYS_ID" >> $GITHUB_OUTPUT
          
          echo "ServiceNow Change Request created: $CR_NUMBER"

  deploy-soap-api:
    name: Deploy SOAP API to APIM
    runs-on: ubuntu-latest
    needs: [create-servicenow-cr]
    if: always() && (needs.create-servicenow-cr.result == 'success' || needs.create-servicenow-cr.result == 'skipped')
    outputs:
      api-gateway-url: ${{ steps.deploy-api.outputs.api-gateway-url }}
      soap-endpoint: ${{ steps.deploy-api.outputs.soap-endpoint }}
      api-operations: ${{ steps.deploy-api.outputs.api-operations }}

    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy SOAP API to APIM
      id: deploy-api
      run: |
        echo "Deploying SOAP API to Azure API Management..."
        
        API_ID="soap-${{ env.API_PATH }}-api"
        
        echo "Using SOAP WSDL: ${{ env.SOAP_WSDL_URL }}"
        echo "APIM Service: ${{ env.APIM_SERVICE_NAME }}"
        echo "API Path: /${{ env.API_PATH }}"
        echo "API ID: $API_ID"
        
        # Import SOAP API to APIM
        echo "Importing SOAP API from WSDL..."
        az apim api import \
          --api-id "$API_ID" \
          --service-name "${{ env.APIM_SERVICE_NAME }}" \
          --resource-group "${{ env.RESOURCE_GROUP }}" \
          --specification-format "Wsdl" \
          --specification-url "${{ env.SOAP_WSDL_URL }}" \
          --path "${{ env.API_PATH }}" \
          --display-name "SOAP ${{ env.API_PATH }} API" \
          --protocols "https" \
          --soap-api-type "SoapToRest"
        
        echo "SOAP API imported successfully"
        
        # Get the API gateway URL
        APIM_GATEWAY_URL="https://${{ env.APIM_SERVICE_NAME }}.azure-api.net"
        API_ENDPOINT="$APIM_GATEWAY_URL/${{ env.API_PATH }}"
        
        echo "api-gateway-url=$APIM_GATEWAY_URL" >> $GITHUB_OUTPUT
        echo "soap-endpoint=$API_ENDPOINT" >> $GITHUB_OUTPUT
        
        echo "API Gateway URL: $APIM_GATEWAY_URL"
        echo "SOAP API Endpoint: $API_ENDPOINT"
        
        # List the available operations
        echo "Listing available API operations..."
        OPERATIONS=$(az apim api operation list \
          --api-id "$API_ID" \
          --service-name "${{ env.APIM_SERVICE_NAME }}" \
          --resource-group "${{ env.RESOURCE_GROUP }}" \
          --query '[].displayName' \
          --output tsv | tr '\n' ',' | sed 's/,$//')
        
        echo "api-operations=$OPERATIONS" >> $GITHUB_OUTPUT
        echo "Available Operations: $OPERATIONS"
        
        az apim api operation list \
          --api-id "$API_ID" \
          --service-name "${{ env.APIM_SERVICE_NAME }}" \
          --resource-group "${{ env.RESOURCE_GROUP }}" \
          --query '[].{Name:displayName, Method:method, UrlTemplate:urlTemplate}' \
          --output table
        
        # Test API connectivity
        echo "Testing API Gateway connectivity..."
        curl -f -s "$APIM_GATEWAY_URL" > /dev/null && echo "API Gateway is accessible" || echo "Warning: API Gateway connectivity test failed"
        
        echo "SOAP API deployment to APIM completed successfully"

  notify-completion:
    name: Notify Deployment Completion
    runs-on: ubuntu-latest
    needs: [create-servicenow-cr, deploy-soap-api]
    if: always() && needs.deploy-soap-api.result == 'success'
    
    steps:
      - name: Send Success Notification
        run: |
          echo "SOAP API Deployment Completed Successfully!"
          echo "================================================"
          echo "Change Request: ${{ needs.create-servicenow-cr.outputs.cr-number }}"
          echo "API Gateway: ${{ needs.deploy-soap-api.outputs.api-gateway-url }}"
          echo "SOAP Endpoint: ${{ needs.deploy-soap-api.outputs.soap-endpoint }}"
          echo "Operations: ${{ needs.deploy-soap-api.outputs.api-operations }}"
          echo "WSDL URL: ${{ env.SOAP_WSDL_URL }}"
          echo "API Path: /${{ env.API_PATH }}"
          
          if [ "${{ github.event_name }}" = "pull_request" ] && [ -n "${{ github.event.number }}" ]; then
            # Add comment to PR if this was triggered by PR
            curl -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/json" \
              -d "{\"body\": \"## 🎉 SOAP API Deployment Completed!\n\n- **Change Request**: [${{ needs.create-servicenow-cr.outputs.cr-number }}](${{ secrets.SERVICENOW_INSTANCE }}/nav_to.do?uri=change_request.do?sys_id=${{ needs.create-servicenow-cr.outputs.cr-sys-id }})\n- **API Gateway**: [${{ needs.deploy-soap-api.outputs.api-gateway-url }}](${{ needs.deploy-soap-api.outputs.api-gateway-url }})\n- **SOAP Endpoint**: [${{ needs.deploy-soap-api.outputs.soap-endpoint }}](${{ needs.deploy-soap-api.outputs.soap-endpoint }})\n- **Operations**: ${{ needs.deploy-soap-api.outputs.api-operations }}\n\nSOAP API has been successfully deployed to Azure API Management!\"}" \
              "${{ github.api_url }}/repos/${{ github.repository }}/issues/${{ github.event.number }}/comments"
          fi